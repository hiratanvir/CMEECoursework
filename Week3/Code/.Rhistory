scale_x_continuous(
expression(alpha^2 * pi / beta * sqrt(Theta)))
# plot the data
p <- ggplot(my_data, aes(x = x, y = y,
colour = abs(my_lm$residual))
) +
geom_point() +
scale_colour_gradient(low = "black", high = "red") +
theme(legend.position = "none") +
scale_x_continuous(
expression(alpha^2 * pi / beta * sqrt(Theta)))
p
# add the regression line
p <- p + geom_abline(
intercept = my_lm$coefficients[1][1],
slope = my_lm$coefficients[2][1],
colour = "red")
p
# throw some math on the plot
p <- p + geom_text(aes(x = 60, y = 0,
label = "sqrt(alpha) * 2* pi"),
parse = TRUE, size = 6,
colour = "blue")
p
# print in a pdf
pdf("../Results/MyLinReg.pdf")
print(p)
dev.off()
installed.packages("ggthemes")
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
p <- ggplot(MyDF, aes(x = log(Predator.mass), y = log(Prey.mass),
colour = Type.of.feeding.interaction )) +
geom_point(size=I(2), shape=I(10)) + theme_bw()
p
p + geom_rangeframe() + # now fine tune the geom to Tufte's range frame
theme_tufte() # and theme to Tufte's minimal ink theme
qplot(log(Prey.mass/Predator.mass),
facets=Type.of.feeding.interaction~., #...~. means facet by row
data=MyDF, geom="density")
qplot(log(Prey.mass,Predator.mass),
facets=Type.of.feeding.interaction~., #...~. means facet by row
data=MyDF, geom="density")
qplot(Prey.mass, Predator.mass, data=MyDF)
qplot(log(Prey.mass), log(Predator.mass), data=MyDF)
qplot(log(Prey.mass), log(Predator.mass), data=MyDF,
facets=Type.of.feeding.interaction~., #...~. means facet by row
data=MyDF, geom="density")
qplot(log(Prey.mass), log(Predator.mass),
facets=Type.of.feeding.interaction~., #...~. means facet by row
data=MyDF, geom="density")
qplot(log(Prey.mass), log(Predator.mass),
facets=Type.of.feeding.interaction~.,
data=MyDF, geom="density")
qplot(log(Prey.mass/Predator.mass),
facets=Type.of.feeding.interaction~.,
data=MyDF, geom="density")
qplot(log(Prey.mass/Predator.mass),
facets=Type.of.feeding.interaction~.,
data=MyDF, geom_smooth(method = "lm"))
ggplot(MyDF, aes(x=log(Prey.mass), y=log(Predator.mass)),
facets=Type.of.feeding.interaction~.,
data=MyDF, geom_smooth(method = "lm"))
qplot(MyDF, aes(x=log(Prey.mass), y=log(Predator.mass)),
facets=Type.of.feeding.interaction~.,
data=MyDF, geom_smooth(method = "lm"))
#Multi-faceted plots (like lattice())
qplot(log(Prey.mass/Predator.mass),
facets=Type.of.feeding.interaction~., #...~. means facet by row
data=MyDF, geom="density")
ggplot(MyDF, aes(x=log(Prey.mass), y=log(Predator.mass)),
facets=Type.of.feeding.interaction~.,
data=MyDF, geom_smooth(method = "lm"))
ggplot(MyDF, aes(x=log(Prey.mass), y=log(Predator.mass)),
# facets=Type.of.feeding.interaction~.,
geom_smooth(method = "lm"))
ggplot(MyDF, aes(x=log(Prey.mass), y=log(Predator.mass)) +
geom_smooth(method = "lm")) + facet_grid(Type.of.feeding.interaction~.)
ggplot(MyDF, aes(x=log(Prey.mass), y=log(Predator.mass)) + geom_point(shape=I(3)) +
facet_grid(Type.of.feeding.interaction~.) + geom_smooth(method = "lm"))
facet_grid(Type.of.feeding.interaction~.) # + geom_smooth(method = "lm"))
ggplot(MyDF, aes(x=log(Prey.mass), y=log(Predator.mass)) + geom_point(shape=I(3)) +
ggplot(MyDF, aes(x=log(Prey.mass), y=log(Predator.mass)) + geom_point(shape=I(3)) +
facet_grid(Type.of.feeding.interaction~.)) # + geom_smooth(method = "lm"))
)
ggplot(MyDF, aes(x=log(Prey.mass), y=log(Predator.mass))) + geom_point(shape=I(3)) +
facet_grid(Type.of.feeding.interaction~.) # + geom_smooth(method = "lm"))
ggplot(MyDF, aes(x=log(Prey.mass), y=log(Predator.mass))) + geom_point(shape=I(3)) +
facet_grid(Type.of.feeding.interaction~.) + geom_smooth(method = "lm")
require(ggplot2)
#Loop converts mg to g in prey mass
for (i in 1:nrow(MyDF)) {
if(MyDF$Prey.mass.unit[i]=="mg"){
MyDF$Prey.mass[i] = MyDF$Prey.mass[i]*0.001
MyDF$Prey.mass.unit[i] = "g"
}
}
pdf("../Results/PP_Regress.pdf", 11.7, 8.3)
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, log="xy")) + geom_point(shape=I(3)) +
facet_grid(Type.of.feeding.interaction~.) + geom_smooth(method = "lm")
p
#Logarithmic axes
#By setting the axes to be logarithmic:
qplot(Prey.mass, Predator.mass, data=MyDF, log="xy")
p
p <- p + coord_fixed(0.5)
p
p
p
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, log="xy")) + geom_point(shape=I(3)) +
facet_grid(Type.of.feeding.interaction~.) + geom_smooth(method = "lm")
p
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, log="xy", colour=Predator.Lifestage)) + geom_point(shape=I(3)) +
facet_grid(Type.of.feeding.interaction~.) + geom_smooth(method = "lm")
p
View(MyDF)
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, log="xy", colour=Predator.lifestage)) + geom_point(shape=I(3)) +
facet_grid(Type.of.feeding.interaction~.) + geom_smooth(method = "lm")
p
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, log="xy", colour=Predator.lifestage)) + geom_point(shape=I(3)) +
facet_grid(Type.of.feeding.interaction~.) + geom_smooth(method = "lm", fullrange=TRUE)
p
#Loop converts mg to g in prey mass
for (i in 1:nrow(MyDF)) {
if(MyDF$Prey.mass.unit[i]=="mg"){
MyDF$Prey.mass[i] = MyDF$Prey.mass[i]*0.001
MyDF$Prey.mass.unit[i] = "g"
}
}
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, log="xy", colour=Predator.lifestage)) + geom_point(shape=I(3)) +
facet_grid(Type.of.feeding.interaction~.) + geom_smooth(method = "lm", fullrange=TRUE)
p
+ scale_x_log10("Prey mass in grams") + scale_y_log10("Predator mass in grams")
+ facet_grid(Type.of.feeding.interaction~.)
+ geom_smooth(method = "lm", fullrange=TRUE)
p
+ scale_x_log10("Prey mass in grams") + scale_y_log10("Predator mass in grams")
+ scale_x_log10("Prey mass in grams") + scale_y_log10("Predator mass in grams") +
+ facet_grid(Type.of.feeding.interaction~.)
+ geom_smooth(method = "lm", fullrange=TRUE)
require(plyr)
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, colour=Predator.lifestage), log="xy")
+ geom_point(shape=I(3))
+ scale_x_log10("Prey mass in grams") + scale_y_log10("Predator mass in grams") +
+ facet_grid(Type.of.feeding.interaction~.)
+ geom_smooth(method = "lm", fullrange=TRUE)
p
+ scale_x_log10("Prey mass in grams") + scale_y_log10("Predator mass in grams")
+ geom_point(shape=I(3))
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, colour=Predator.lifestage), log="xy")
+ geom_point(shape=I(3))
+ scale_x_log10("Prey mass in grams") + scale_y_log10("Predator mass in grams")
+ facet_grid(Type.of.feeding.interaction~.)
+ geom_smooth(method = "lm", fullrange=TRUE)
require(ggplot2)
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, colour=Predator.lifestage), log="xy")
+ geom_point(shape=I(3))
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, colour=Predator.lifestage), log="xy")
p<- p + geom_point(shape=I(3))
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, colour=Predator.lifestage), log="xy")
p<- p + geom_point(shape=I(3)) + scale_x_log10("Prey mass in grams") + scale_y_log10("Predator mass in grams")
p
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, colour=Predator.lifestage), log="xy")
p<- p + geom_point(shape=I(3)) + scale_x_log10("Prey mass in grams") + scale_y_log10("Predator mass in grams") + facet_grid(Type.of.feeding.interaction~.)
p
p <- ggplot(MyDF, aes(x=Prey.mass, y=Predator.mass, colour=Predator.lifestage), log="xy")
p <- p + geom_point(shape=I(3)) +
scale_x_log10("Prey mass in grams") +
scale_y_log10("Predator mass in grams") +
facet_grid(Type.of.feeding.interaction~.) +
geom_smooth(method = "lm", fullrange=TRUE)
p
p <- p + geom_point(shape=I(3)) +
scale_x_log10("Prey mass in grams") +
scale_y_log10("Predator mass in grams") +
facet_grid(Type.of.feeding.interaction~.) +
geom_smooth(method = "lm", fullrange=TRUE) +
theme(legend.position="bottom")
p <- p + geom_point(shape=I(3)) +
scale_x_log10("Prey mass in grams") +
scale_y_log10("Predator mass in grams") +
facet_grid(Type.of.feeding.interaction~.) +
geom_smooth(method = "lm", fullrange=TRUE) +
theme(legend.position="bottom"))
p <- p + theme_bw() + geom_point(shape=I(3)) +
scale_x_log10("Prey mass in grams") +
scale_y_log10("Predator mass in grams") +
facet_grid(Type.of.feeding.interaction~.) +
geom_smooth(method = "lm", fullrange=TRUE)
p <- p + theme_bw() + geom_point(shape=I(3)) +
scale_x_log10("Prey mass in grams") +
scale_y_log10("Predator mass in grams") +
facet_grid(Type.of.feeding.interaction~.) +
geom_smooth(method = "lm", fullrange=TRUE)
p <- p + theme_bw() + geom_point(shape=I(3)) +
scale_x_log10("Prey mass in grams") +
scale_y_log10("Predator mass in grams") +
facet_grid(Type.of.feeding.interaction~.) +
geom_smooth(method = "lm", fullrange=TRUE)
p
print(qplot(Prey.mass, Predator.mass, data=MyDF, log="xy",
main="Relation between predator and prey mass",
xlab="log(Prey mass) (g)",
ylab="log(Predator mass) (g)") + theme_bw())
q <- p + geom_point(size=I(2), shape=I(10)) + theme_bw()
q
#specify the data and  aesthetics to start a ggplot graph
p<-ggplot(MyDF, aes(x=log(Predator.mass),
y=log(Prey.mass),
colour=Type.of.feeding.interaction))
p <- ggplot(MyDF, aes(x=Prey.mass,
y=Predator.mass,
colour=Predator.lifestage),
log="xy")
p <- p + theme_bw() + geom_point(shape=I(3)) +
scale_x_log10("Prey mass in grams") +
scale_y_log10("Predator mass in grams") +
facet_grid(Type.of.feeding.interaction~.) +
geom_smooth(method = "lm", fullrange=TRUE)
p
p <- p + theme(legend.position = "bottom")
p
p <- p + theme(legend.position = "bottom", legend.box = "horizontal")
p
p
p <- p + theme(legend.position = "bottom") +
guides(color = guide_legend(nrow=1))
p
p <- p + theme(legend.position = "bottom") +
guides(color = guide_legend(nrow=1)) +
coord_fixed(5)
p
p <- p + theme(legend.position = "bottom") +
guides(color = guide_legend(nrow=1)) +
coord_fixed(1)
p
p <- p + theme(legend.position = "bottom") +
guides(color = guide_legend(nrow=1)) +
coord_fixed(3)
p
p <- p + theme(legend.position = "bottom") +
guides(color = guide_legend(nrow=1)) +
coord_fixed(0.5)
p
print(p)
dev.off()
source('~/Documents/CMEECoursework/Week3/Code/PP_Regress.R')
plot(ats)
load("../Data/KeyWestAnnualMeanTemperature.RData")
plot(ats)
View(ats)
print(qplot(Year, Temp, data=ats,
main="Key West Annual Mean Temperature",
xlab="Year",
ylab="Temp") + theme_bw())
print(qplot(Year, Temp, data=ats,
main="Key West Annual Mean Temperature",
xlab="Year",
ylab="Temp") + theme_bw() +  geom_smooth(method = "lm", fullrange=TRUE))
print(qplot(Year, Temp, data=ats,
main="Key West Annual Mean Temperature",
xlab="Year",
ylab="Temp") + theme_bw() +  geom_smooth(method = "lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust = 0)))
print(qplot(Year, Temp, data=ats,
main="Key West Annual Mean Temperature",
xlab="Year",
ylab="Temp") + theme_bw() +  geom_smooth(method = "lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust = 2)))
print(qplot(Year, Temp, data=ats,
main="Key West Annual Mean Temperature",
xlab="Year",
ylab="Temp") + theme_bw() +  geom_smooth(method = "lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust = 1)))
print(qplot(Year, Temp, data=ats,
main="Key West Annual Mean Temperature",
xlab="Year",
ylab="Temp") + theme_bw() +  geom_smooth(method = "lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust = 0.5)))
print(qplot(Year, Temp, data=ats,
main="Key West Annual Mean Temperature",
xlab="Year",
ylab="Temp(ºC)") + theme_bw() +  geom_smooth(method = "lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust = 0.5)))
source('~/Documents/CMEECoursework/Week3/Code/TAutoCorr.R')
source('~/Documents/CMEECoursework/Week3/Code/TAutoCorr.R')
print(approx_p_value)
print(approx_p_value)
load("../Data/KeyWestAnnualMeanTemperature.RData")
print(qplot(Year, Temp, data=ats,
main="Key West Annual Mean Temperature",
xlab="Year",
ylab="Temp(ºC)") + theme_bw() +  abline(lm), fullrange=TRUE) +
theme(plot.title = element_text(hjust = 0.5)))
plot(Year, Temp, pch = 16, cex = 1.3, col = "blue",
main = "Key West Annual Mean Temperature", xlab = "Year", ylab = "Temp (ºC)")
load("../Data/KeyWestAnnualMeanTemperature.RData")
plot(Year, Temp, pch = 16, cex = 1.3, col = "blue",
main = "Key West Annual Mean Temperature", xlab = "Year", ylab = "Temp (ºC)")
plot(ats$Year, ats$Temp, pch = 16, cex = 1.3, col = "blue",
main = "Key West Annual Mean Temperature", xlab = "Year", ylab = "Temp (ºC)")
plot(ats$Year, ats$Temp, pch = 16, cex = 1.3, col = "red",
main = "Key West Annual Mean Temperature", xlab = "Year", ylab = "Temp (ºC)")
plot(ats$Year, ats$Temp, pch = 16, cex = 1, col = "red",
main = "Key West Annual Mean Temperature", xlab = "Year", ylab = "Temp (ºC)")
lm(ats$Year~ats$Temp)
abline(1160.28, 32.22)
abline(lm(ats$Year~ats$Temp))
plot(ats$Year, ats$Temp, pch = 16, cex = 1, col = "red",
main = "Key West Annual Mean Temperature", xlab = "Year", ylab = "Temp (ºC)"), abline(lm(ats$Year~ats$Temp))
plot(ats$Year, ats$Temp, pch = 16, cex = 1, col = "red",
main = "Key West Annual Mean Temperature", xlab = "Year", ylab = "Temp (ºC)"),
plot(abline(lm(ats$Year~ats$Temp)))
q <- plot(ats$Year, ats$Temp, pch = 16, cex = 1, col = "red",
main = "Key West Annual Mean Temperature", xlab = "Year", ylab = "Temp (ºC)")
q <- q + abline(lm(ats$Year~ats$Temp))
q <- abline(lm(ats$Year~ats$Temp))
source('~/Documents/CMEECoursework/Week3/Code/TAutoCorr.R')
source('~/Documents/CMEECoursework/Week3/Code/TAutoCorr.R')
source('~/Documents/CMEECoursework/Week3/Code/TAutoCorr.R')
source('~/Documents/CMEECoursework/Week3/Code/TAutoCorr.R')
print(approx_p_value)
print(approx_p_value)
print(approx_p_value)
print(qplot(Year, Temp, data=ats,
main="Key West Annual Mean Temperature",
xlab="Year",
ylab="Temp(ºC)") + theme_bw() +  geom_smooth(method = "lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust = 0.5)))
source('~/Documents/CMEECoursework/Week3/Code/PP_Regress.R')
View(models)
load("../Data/KeyWestAnnualMeanTemperature.RData")
View(ats)
#Creating two set of vectors
first_set<-ats[1:99,2]
second_set<-ats[2:100,2]
require(lattice)
df <- data.frame(t, t-1)
View(df)
Corr <- data.frame(t, t-1)
View(Corr)
load("../Data/KeyWestAnnualMeanTemperature.RData")
#Creating two set of vectors
t<-ats[1:99,2]
t-1<-ats[2:100,2]
Corr <- data.frame(t, t-1)
View(Corr)
?geom_abline()
print(qplot(t-1, t, data=Corr),
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)" + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust 0.5)))
#Creating two set of vectors
y<-ats[1:99,2]
x<-ats[2:100,2]
Corr <- data.frame(y, x)
print(qplot(t-1, t, data=Corr),
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)" + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust 0.5)))
View(Corr)
print(qplot(x, y, data=Corr),
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)" + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust 0.5)))
print(qplot(x, y, data=Corr),
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)" + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust 0.5)))
print(qplot(x, y, data=Corr),
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)") + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust 0.5)))
print(qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)") + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust 0.5)))
print(qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)") + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust 0.5)))
print(qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)") + theme_bw() + geom_smooth(method="lm", fullrange=TRUE)) +
#theme(plot.title = element_text(hjust 0.5)))
dev.off()
require(ggplot2)
print(qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)") + theme_bw() + geom_smooth(method="lm", fullrange=TRUE)) +
#theme(plot.title = element_text(hjust 0.5)))
dev.off()
print(ggplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)") + theme_bw() + geom_smooth(method="lm", fullrange=TRUE)) +
theme(plot.title = element_text(hjust 0.5)))
print(qplot(Year, Temp, data=ats,
main="Key West Annual Mean Temperature",
xlab="Year",
ylab="Temp(ºC)") + theme_bw() +  geom_smooth(method = "lm", fullrange=TRUE) +
theme(plot.title = element_text(hjust = 0.5)))
print(ggplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)") + theme_bw() + geom_smooth(method="lm", fullrange=TRUE)) +
theme(plot.title = element_text(hjust = 0.5)))
print(qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)") + theme_bw() + geom_smooth(method="lm", fullrange=TRUE)) +
theme(plot.title = element_text(hjust = 0.5)))
print(qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)" + theme_bw() + geom_smooth(method="lm", fullrange=TRUE)) +
theme(plot.title = element_text(hjust = 0.5)))
print(qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)")
+ theme_bw() + geom_smooth(method="lm", fullrange=TRUE)) +
theme(plot.title = element_text(hjust = 0.5)))
print(qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)"))
A<-qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)"))
A
A<-qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)"))
A
print(qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)"))
A<-qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)")
A<-qplot(x, y, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)")
A<- A + theme_bw() + geom_smooth(method="lm", fullrange=TRUE)) +
theme(plot.title = element_text(hjust = 0.5)))
A<- A + theme_bw() + geom_smooth(method="lm", fullrange=TRUE)) + theme(plot.title = element_text(hjust = 0.5))
A<- A + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) + theme(plot.title = element_text(hjust = 0.5))
A
source('~/Documents/CMEECoursework/Week3/Code/TAutoCorr.R')
source('~/Documents/CMEECoursework/Week3/Code/TAutoCorr.R')
source('~/Documents/CMEECoursework/Week3/Code/TAutoCorr.R')
a
A
A<- A + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) + theme(plot.title = element_text(hjust = 0.4))
print(A)
Corr <- data.frame(first_set, second_set)
A<-qplot(second_set, first_set, data=Corr,
main="Correlation of one years temperature (t-1) with successive years (t), across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)")
A <- A + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) + theme(plot.title = element_text(hjust = 0.5))
print(A)
View(ats)
View(ats)
A<-qplot(second_set, first_set, data=Corr,
main="Correlation of one years temperature with successive years, across the years",
xlab="Temperature, t-1 (ºC)",
ylab="Temperature, t (ºC)")
A <- A + theme_bw() + geom_smooth(method="lm", fullrange=TRUE) + theme(plot.title = element_text(hjust = 0.5))
print(A)
dev.off()
source('~/Documents/CMEECoursework/Week3/Code/TAutoCorr.R')
A
#step 1
true_cor<-cor(first_set,second_set)
true_cor
source('~/Documents/CMEECoursework/Week3/Code/Ricker.R')
source('~/Documents/CMEECoursework/Week3/Code/DataWrang.R')
View(MyMetaData)
View(MyData)
View(MyMetaData)
View(TempData)
source('~/Documents/CMEECoursework/Week3/Code/basic_io.R')
source('~/Documents/CMEECoursework/Week3/Code/get_TreeHeight.R')
args<-commandArgs(trailingOnly = TRUE)
MyData <- read.csv(args[1])
TreeHeight <- function(degrees, distance){
radians <- degrees * pi / 180
height <- distance * tan(radians)
return (height)
}
TreeHeight(MyData$Angle.degrees, MyData$Distance.m)
MyData$Tree.Height.m <- paste(TreeHeight(MyData$Angle.degrees, MyData$Distance.m))
Output <- paste("../Results/", basename(tools::file_path_sans_ext(args[1])),"_treeheights.csv")
source('~/Documents/CMEECoursework/Week3/Code/PP_Lattice.R')
source('~/Documents/CMEECoursework/Week3/Code/PP_Lattice.R')
