class(v)
class (v)
a <- 4
a
a*a
a_squared <- a*a
sqrt (a_squared)
v <- c(0, 1, 2, 3, 4)
v
is.vector(v)
mean(v)
var(v)
median(v)
sum(v)
prod(v + 1)
length(v)
wing.width.cm <- 1.2
wing.length.cm <- c(4.7, 5.2, 4.8)
x <- (1 + (2*3)
v < TRUE
v <- TRUE
class(v)
v <- 3.2
class(V)
class(v)
v <- 2L
class(v)
v <- "A string"
class(v)
as.integer(3.1)
as.numeric(4)
as.roman(155)
as.character(155)
as.logical(5)
as.logical(0)
b <- NA
is.na(b)
b <- 0/0
b
is.nan(b)
b <- 5/0
b
a = 5
is.vector(a)
v1 = c(0.02, 0.5, 1)
v2 = c("a", "bc", "def", "ghij")
v3 = c(TRUE, TRUE, FALSE)
V1 <- C(0.02, TRUE, 1)
v1 <- c(0.02, TRUE, 1)
v1
v1 <- c(0.02, "Mary", 1)
v1
mat1 <- matrix(1:25, 5, 5)
mat1
mat1 <- matrix(1:25, 5, 5, byrow=TRUE)
mat1
arr1 <- array(1:50, c(5, 5, 2))
arr1
a <- c(1,5) + 2
a
x <- c(1,2); y <- c(5,3,9,2)
x + y
x + c(y,1)
library(dplyr)
library(ggplot2)
library(reshape2)
g<- read.table(file="H938_chr15.geno", header=TRUE)
getwd()
setwd(/Documents/CMEECourswork/Week6/Data)
setwd("Documents/CMEECourswork/Week6/Data")
setwd('Documents/CMEECoursework/Week6/Data/')
g<- read.table(file="H938_chr15.geno", header=TRUE)
View(g)
dim(g)
head(g)
?mutate
help("mutate")
#How many SNPs are there? Calculates the number of counts at each locus
#Using the mutate function from dplyr library to do the addition &
#adding a new column to the dataframe in one step
g<- mutate(g,nObs = nA1A1 + nA1A2 + nA2A2)
head(g)
summary(g$nObs)
gplot(nObs, data=g)
qplot(nObs, data=g)
#Calculating genotype and allele frequencies
g <- mutate(g, p11 = nA1A1/nObs, p12 = nA1A2/nObs, p22=nA2A2/nObs)
head(g)
View(g)
#Compute allele frequencies from genotype frequencies
#p11 is homozygous and p12 heterozygous
g<- mutate(g, p1= p11 + 0.5*p12, p2 = p22 + 0.5*p12)
head(g)
qplot(p1, p2, data=g)
p1
print(p1, data=g)
p1
gTidy <- select(g, c(p1, p11, p12, p22)) %>%
melt(id='p1', value.name = "Genotype.Proportion")
View(gTidy)
head(gTidy)
dim(gTidy)
tail(gTidy)
ggplot(gTidy) + geom.point(aes(x=p1,
y=Genotype.Proportion,
color=variable,
shape=variable))
ggplot(gTidy) + geom.point(aes(x=p1,
y=Genotype.Proportion,
color=variable,
shape=variable)))
ggplot(gTidy) + geom.point(aes(x=p1, y=Genotype.Proportion, color=variable,shape=variable))
ggplot(gTidy)+geom.point(aes(x=p1,
y=Genotype.Proportion,
color=variable,
shape=variable))
ggplot(gTidy)+geom_point(aes(x=p1,
y=Genotype.Proportion,
color=variable,
shape=variable))
#Plotting the Hardy-Weinberg proportions:
ggplot(gTidy) + geom_point(aes(x=p1, y=Genotype.Proportions, color=variable, shape=variable)) +
stat_function(fun=function(p) p^2, geom="line", colour="red", size=2.5) +
stat_function(fun=function(p) 2*p*(1-p), geom="line", colour="green", size=2.5) +
stat_function(fun=function(p) (1-p)^2, geom="line", colour="blue", size=2.5)
#Plotting the Hardy-Weinberg proportions:
ggplot(gTidy) + geom_point(aes(x=p1, y=Genotype.Proportion, color=variable, shape=variable)) +
stat_function(fun=function(p) p^2, geom="line", colour="red", size=2.5) +
stat_function(fun=function(p) 2*p*(1-p), geom="line", colour="green", size=2.5) +
stat_function(fun=function(p) (1-p)^2, geom="line", colour="blue", size=2.5)
