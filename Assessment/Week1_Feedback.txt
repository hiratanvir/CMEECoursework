Starting weekly assessment for Hira, Week1

Current Marks = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 1.55 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week1, Assessment, Week2, .git

Found the following files in parent directory: README.txt, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*~ 
*.tmp
**********************************************************************

Found README in parent directory, named: README.txt

Printing contents of README.txt:
**********************************************************************
My CMEE 2017-18 Coursework Respository
**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Code, Data, Sandbox

Found the following files: README.txt

Checking for readme file in weekly directory...

Found README in parent directory, named: README.txt

Printing contents of README.txt:
**********************************************************************
Week 1 Directory contents

Code:
1. UnixPrac1.txt #Problem solving using Unix shell commands & piping commands
2. FirstExample.tex #Made a file extension for a LaTeX typesetting file format
3. FirstBiblio.bib #Contains a formatted bibliography that is used together with LaTeX and compiled in a pdf
4. CompileLaTeX.sh #Script combines tex file and BibTex to produce a LaTeX document
5. FirstExample.pdf #pdf latex file produced when bash script run to compile latex with bibtex
6. csvtospace.sh #Script converts a comma into space
7. ConcatenateTwoFiles.sh #This script merges two files into a new one
8. CountLines.sh #Counts the number of lines within a file
9. MyExampleScript.sh #Combines two messages and prints it out into a file
10. variables.sh #Prints out the sum of multiple variables into a file
11. tabtocsv.sh #Subsitutes a comma where a tab is used
12. boilerplate.sh #Using echo -e to enable it to interpret backslash escapes

Data:
1. Temperatures #csv files converted to txt files with the commas converted to spaces
2. fasta #containing genetic code
3. spawannxs.txt




**********************************************************************

Results directory missing!

Found 12 code files: ConcatenateTwoFiles.sh, .txt, CountLines.sh, variables.sh, CompileLaTeX.sh, csvtospace.sh, FirstExample.tex, MyExampleScript.sh, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh, boilerplate.sh

Found the following extra files: .csv
0.5 pt deducted per extra file

Current Marks = 99.5

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:
**********************************************************************
#!/bin/bash
cat $1 > $3
cat $2 >> $3
echo "Merged File is"
cat $3**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 

**********************************************************************
Merged File is

**********************************************************************

Encountered error:
ConcatenateTwoFiles.sh: line 2: $3: ambiguous redirect
ConcatenateTwoFiles.sh: line 3: $3: ambiguous redirect

======================================================================
Inspecting script file .txt...

File contents are:
**********************************************************************
**********************************************************************

Testing .txt...

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash
NumLines=`wc -l < $1`
echo "The file $1 has $NumLines lines"
echo**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
The file  has  lines


**********************************************************************

Encountered error:
CountLines.sh: line 2: $1: ambiguous redirect

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Shows the use of variables
MyVar='some string'
echo 'the current value of the variable is' $MyVar
echo 'Please enter a new string'
read MyVar
echo 'the current value of the variable is' $MyVar
## Reading multiple values
echo 'Enter two numbers separated by space(s)'
read a b
echo 'you entered' $a 'and' $b '. Their sum is:'
mysum=`expr $a + $b`
echo $mysum**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is some string
Please enter a new string
the current value of the variable is
Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error:
expr: syntax error

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:
**********************************************************************
#!/bin/bash
pdflatex $1* #Using the wildcard * we can define the type of file when we run it in bash
pdflatex $1*
bibtex $1
pdflatex $1*
pdflatex $1*
evince $1*.pdf &

## Cleanup
rm *
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
rm *.bbl
rm *.blg**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 

**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(./boilerplate.sh
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 81 language(s) loaded.
! You can't use `macro parameter character #' in vertical mode.
l.1 #
     !/bin/bash
? 
! Emergency stop.
l.1 #
     !/bin/bash
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on boilerplate.log.
This is pdfTeX, Vers
**********************************************************************

Encountered error:
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
rm: cannot remove '*'$'\030': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory
rm: cannot remove '*.bbl': No such file or directory
rm: cannot remove '*.blg': No such file or directory

** (evince:31095): WARNING **: Error when getting information for file '/home/mhasoba/Documents/Teaching/IC_CMEE/2017-18/Coursework/StudentRepos/HiraTanvir_HT4917/Week1/Code/*.pdf': No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

** (evince:31095): WARNING **: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hira hira.tannvir@imperial.ac.uk
# Script: csvtospace.sh
# Desc: Coverts comma separated values to a space separated values file
# saves the output into a .txt file
# Arguments: 1-> tab delimited file
# Date: Oct 2017
echo "Create space delimited version of $1 ..."
cat $1 | tr -s "," " " >> $1.txt
echo "Done!"
exit**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************
Create space delimited version of  ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00336s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
\documentclass[12pt]{article}
\title{A Simple Document}
\author{Your Name}
\date{}
\begin{document}
	\maketitle

	\begin{abstract}
		This paper must be cool!
	\end{abstract}

	\section{Introduction}
		Blah Blah!

	\section{Materials \& Methods}
	One of the most famous equations is:
	\begin{equation}
		E = mc^2
	\end{equation}
	This equation was first proposed by Einstein in 1905
	\cite{einstein1905does}.

	\bibliographystyle{plain}
	\bibliography{FirstBiblio}
\end{document}**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash
msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00235s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content},
  author={Einstein, Albert},
  journal={Ann Phys},
  volume={18},
  pages={639--641},
  year={1905}
}**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
# 1
wc -l *.fasta #Counts the number of lines in any fast file

# 2
tail -n +2 E.coli.fasta #Prints everything in the file starting from the second line

# 3
cat fasta/E.coli.fasta | tail -n +2 | tr -d '\n' | wc -c #Counts and prints every character starting from the second line after removing the new line characters

# 4
cat fasta/E.coli.fasta | tr -d '\n'| grep -o ATCG | wc -l #After the new line characters are removed, counts the occurrence of the particular sequence ATGC on every line

# 5
cat fasta/E.coli.fasta | grep -v ">" | awk 'BEGIN{a=0; c=0; g=0; t=0;} {a+=gsub("A",""); c+=gsub("C",""); g+=gsub("G",""); t+=gsub("T","");} END{print (a+t)/(c+g)}' #Counts the occurrences of A, T, C, G individually and then divides the AT total by CG total   **********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Hira hira.tanvir@imperial.ac.uk
# Script: tabtocsv.sh
# Desc: substitute the tabs in the files with commas
# saves the output into a .csv file
# Arguments: 1-> tab delimited file
# Date: Oct 2017
echo "Creating a comma delimited version of $1 ..."
cat $1 | tr -s "\t" "," >> $1.csv
echo "Done!"
exit**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a comma delimited version of  ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00386s

======================================================================
Inspecting script file boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Your Name your.login@imperial.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2015
echo -e "\nThis is a shell script! \n" #what does -e do?
#exit**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00227s

======================================================================
======================================================================
Finished running scripts

Ran into 4 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Marks for the Week = 99.5

NOTE THAT THESE ARE NOT THE FINAL MARKS FOR THE WEEK, BUT AN UPPER BOUND ON THE MARKS!