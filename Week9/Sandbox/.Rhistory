source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
#for (i in 1:10000)
for(n in list){n = sample(n)}
# mid-point between random point and chosen point
x <- ((a[1]+n[1]) / 2)
y <- ((a[2])+n[2] / 2)
points(x, y, cex = 0.5, col="red")
list
list[[1]]
list[[2]]
for(n in 1:100){
target <- sample(1:3, 1)
}
target
for(n in 1:100){
target <- list[[sample(1:3, 1)]]
}
target
target
target
for(n in 1:100){
target <- list[[sample(1:3, 1)]]
}
target
for(n in 1:100){
n <- list[[sample(1:3, 1)]]
}
for(n in 1:100){
n <- list[[sample(1:3, 1)]]
x <- ((vec_x[1]+n[1]) / 2)
y <- ((vec_x[2])+n[2] / 2)
vec_x <- c(x,y)
points(x, y, cex = 0.5, col="red")
}
plot.new()
plot.window(xlim=c(0,5), ylim=c(0,5), xlab="x", ylab="y")
#Where you are - starting co-ordinate
vec_x <- c(0,0)
points(vec_x[1], vec_x[2], cex=0.5)
for(n in 1:100){
n <- list[[sample(1:3, 1)]]
x <- ((vec_x[1]+n[1]) / 2)
y <- ((vec_x[2])+n[2] / 2)
vec_x <- c(x,y)
points(x, y, cex = 0.5, col="red")
}
which.max(vec_x)
pmax(vec_x, n)
pmax(vec_x[[1], n[[1]]])
if(vec_x > n){}
if(vec_x > n){
q
c
q
}
if(vec_x[1] > n[1]){}
if(vec_x[1] > n[1]){
x <- ((vec_x[1]-n[1]/2)
}
for(n in 1:100){
n <- list[[sample(1:3, 1)]]
x <- (vec_x[1]+(n[1]-vec_x[1]) / 2)
y <- (vec_x[2]+(n[2]-vec_x[2]) / 2)
vec_x <- c(x,y)
points(x, y, cex = 0.5, col="red")
}
rm(list=ls())
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
chaos_game()
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
chaos_game()
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
chaos_game()
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
chaos_game()
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
#23.
spiral_2 <- function(start_postion, theta, length)
{
if(length >= 2){
output1 <- turtle(start_position, theta, length)
output2 <- spiral(output1, theta-pi/4, length*0.95)
} else{
return(NULL)
}
}
spiral_2(c(0,0), 2, 1)
spiral_2(c(0,0), 2, 2)
# Draws a line of a given length from a single point & returns a vector of the endpoint
turtle <- function (start_position, theta , length)
{
opposite = sin(theta) * length
adjacent = cos(theta) * length
x2 = start_position[1] + adjacent
y2 = start_position[2] + opposite
lines(c(start_position[1], x2), c(start_position[2], y2))
return(c(x2, y2))
}
elbow <- function(start_position, theta, length)
{
output1 <- turtle(start_position, theta, length)
output2 <- turtle(output1, theta-pi/4, length*0.95)
}
#22.
spiral <- function(start_position, theta, length)
{
output1 <- turtle(start_position, theta, length) #piping the output of that function into an object
output2 <- spiral(output1, theta-pi/4, length*0.95)
}
#23.
spiral_2 <- function(start_postion, theta, length)
{
if(length >= 2){
output1 <- turtle(start_position, theta, length)
output2 <- spiral(output1, theta-pi/4, length*0.95)
} else{
return(NULL)
}
}
spiral_2(c(0,0), 2, 2)
spiral_2(c(0,0), 2, 3)
spiral(c(0,0), 2, 2)
#23.
spiral_2 <- function(start_postion, theta, length)
{
if(length >= 2){
output1 <- turtle(start_position, theta, length)
}
output2 <- spiral(output1, theta-pi/4, length*0.95)
}
spiral_2(c(0,0), 2, 2)
dev.off()
#23.
spiral_2 <- function(start_postion, theta, length)
{
if(length >= 2){
output1 <- turtle(start_position, theta, length)
}
output2 <- spiral(output1, theta-pi/4, length*0.95)
}
spiral_2(c(0,0), 2, 2)
#23.
spiral_2 <- function(start_postion, theta, length)
{
if(length >= 2){
output1 <- turtle(start_position, theta, length)
}
output2 <- spiral_2(output1, theta-pi/4, length*0.95)
}
spiral_2(c(0,0), 2, 2)
#23.
spiral_2 <- function(start_postion, theta, length)
{
if(length >= 2){
output1 <- turtle(start_position, theta, length)
output2 <- spiral_2(output1, theta-pi/4, length*0.95)
}
else{
return(0)
}
}
spiral_2(c(0,0), 2, 2)
spiral_2(c(0,0), 2, 1)
#23.
spiral_2 <- function(start_postion, theta, length)
{
if(length >= 2){
output1 <- turtle(start_position, theta, length)
output2 <- spiral_2(output1, theta-pi/4, length*0.95)
}
else{
return(NULL)
}
}
spiral_2(c(0,0), 2, 1)
spiral_2(c(0,0), 2, 3)
#23.
spiral_2 <- function(start_position, theta, length)
{
if(length >= 2){
output1 <- turtle(start_position, theta, length)
output2 <- spiral_2(output1, theta-pi/4, length*0.95)
}
else{
return(NULL)
}
}
spiral_2(c(0,0), 2, 3)
plot.new()
plot.window(xlim= c(-10,10), ylim = c(-10,10))
spiral_2(c(0,0), 2, 3)
spiral_2(c(0,0), 2, 2)
spiral_2(c(0,0), 2, 1)
spiral_2(c(0,0), 2, 4)
plot.new()
plot.window(xlim= c(-10,10), ylim = c(-10,10))
spiral_2(c(0,0), 2, 6)
plot.new()
spiral_2(c(0,0), 2, 6)
plot.new()
plot.window(xlim= c(-10,10), ylim = c(-10,10))
spiral_2(c(0,0), 2, 3)
spiral_2(c(0,0), 2, 6)
plot.new()
plot.window(xlim= c(0,10), ylim = c(0,10))
spiral_2(c(0,0), 2, 6)
plot.new()
plot.window(xlim= c(0,100), ylim = c(0,100))
spiral_2(c(0,0), 2, 6)
spiral_2(c(0,0), 2, 9)
spiral_2(c(0,0), 2, 20)
dev.off
dev.off()
#24.
tree <- function(start_position, theta, length)
{
if(length >= 1){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-pi/4, length*0.65)
output3 <- tree(output2, pi/4-theta, length*0.65)
}
else{
return(NULL)
}
}
tree(c(0,0), 2, 2)
plot.new()
plot.window(xlim= c(0,100), ylim = c(0,100))
tree(c(0,0), 2, 2)
tree(c(0,0), 2, 8)
tree(c(0,0), 2, 10)
tree(c(0,0), 2, 10)
tree(c(0,0), 2, 15)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
else{
return(NULL)
}
#24.
tree <- function(start_position, theta, length)
{
if(length >= 1){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-pi/4, length*0.65)
output3 <- tree(output1, pi/4-theta, length*0.65)
}
else{
return(NULL)
}
}
tree(c(0,0), 2, 8)
tree(c(0,0), 2, 3)
dev.off()
plot.new()
plot.window(xlim= c(0,100), ylim = c(0,100))
tree(c(0,0), 2, 3)
dev.off()
plot.new()
plot.window(xlim= c(0,100), ylim = c(0,100))
tree(c(0,0), 2, 10)
#24.
tree <- function(start_position, theta, length)
{
if(length >= 1){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-(pi/4), length*0.65)
output3 <- tree(output1, (pi/4)-theta, length*0.65)
}
else{
return(NULL)
}
}
tree(c(0,0), 2, 15)
#24.
tree <- function(start_position, theta, length)
{
if(length >= 1){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-(pi/4), length*0.65)
output3 <- tree(output2, (pi/4)-theta, length*0.65)
}
else{
return(NULL)
}
}
tree(c(0,0), 2, 15)
tree(c(0,0), 2, 20)
dev.off()
plot.new()
plot.window(xlim= c(0,100), ylim = c(0,100))
tree(c(0,0), 2, 20)
#24.
tree <- function(start_position, theta, length)
{
if(length >= 1){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-(pi/4), length*0.65)
output3 <- tree(output1, (pi/4)-theta, length*0.65)
}
else{
return(NULL)
}
}
tree(c(0,0), 2, 20)
#24.
tree <- function(start_position, theta, length)
{
if(length > 2){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-(pi/4), length*0.65)
output3 <- tree(output1, (pi/4)-theta, length*0.65)
}
else{
return(NULL)
}
}
tree(c(0,0), 2, 30)
source('~/.active-rstudio-document')
elbow <- function(start_position, theta, length)
{
output1 <- turtle(start_position, theta, length)
output2 <- turtle(output1, pi/4-theta, length*0.95)
}
elbow(c(0,0), 1, 1)
#22.
spiral <- function(start_position, theta, length)
{
output1 <- turtle(start_position, theta, length) #piping the output of that function into an object
output2 <- spiral(output1, pi/4-theta, length*0.95)
}
spiral(c(1,1), 1, 5)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
spiral(c(1,1), 1, 5)
#23.
spiral_2 <- function(start_position, theta, length)
{
if(length >= 1){
output1 <- turtle(start_position, theta, length)
output2 <- spiral_2(output1, theta-pi/4, length*0.95)
}
else{
return(NULL)
}
}
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
spiral_2(c(1,1), 1, 5)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
spiral_2(c(1,1), 1, 5)
#24.
tree <- function(start_position, theta, length)
{
if(length > 5){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-(pi/4), length*0.65)
output3 <- tree(output1, (pi/4)-theta, length*0.65)
}
else{
return(NULL)
}
}
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
spiral_2(c(1,1), 1, 5)
spiral_2(c(1,1), 1, 8)
spiral_2(c(1,1), 1, 6)
#24.
tree <- function(start_position, theta, length)
{
if(length > 5){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-(pi/4), length*0.65)
output3 <- tree(output1, (pi/4)-theta, length*0.65)
}
else{
return(NULL)
}
}
spiral_2(c(1,1), 1, 6)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
tree(c(1,1), 1, 6)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
tree(c(1,1), 1, 6)
tree(c(4,4), 1, 20)
source('~/.active-rstudio-document')
elbow(c(1,1), 1, 2)
elbow <- function(start_position, theta, length)
{
output1 <- turtle(start_position, theta, length)
output2 <- turtle(output1, theta-pi/4, length*0.95)
}
elbow(c(1,1), 1, 2)
elbow <- function(start_position, theta, length)
{
output1 <- turtle(start_position, theta, length)
output2 <- turtle(output1, theta+pi/4, length*0.95)
}
elbow(c(1,1), 1, 2)
elbow <- function(start_position, theta, length)
{
output1 <- turtle(start_position, theta, length)
output2 <- turtle(output1, pi/4+theta, length*0.95)
}
elbow(c(1,1), 1, 2)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
#24.
tree <- function(start_position, theta, length)
{
if(length > 2){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-(pi/4), length*0.65)
output3 <- tree(output1, (pi/4)+theta, length*0.65)
}
else{
return(NULL)
}
}
elbow(c(1,1), 1, 2)
tree(c(4,4), 1, 20)
#24.
tree <- function(start_position, theta, length)
{
if(length > 2){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-(pi/4), length*0.65)
output3 <- tree(output1, theta+(pi/4), length*0.65)
}
else{
return(NULL)
}
}
tree(c(4,4), 1, 20)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
tree(c(1,1), 1, 6)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
tree(c(0,0), 5, 10)
tree(c(0,0), 1, 10)
tree(c(0,0), 9, 10)
tree(c(0,0), 0, 10)
tree(c(0,0), 2, 20)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
tree(c(0,0), 2, 20)
tree(c(5,5), 2, 20)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
tree(c(4,4), 2, 20)
plot.new()
tree(c(4,4), 1, 20)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
#24.
tree <- function(start_position, theta, length)
{
if(length >= 2){
output1 <- turtle(start_position, theta, length)
output2 <- tree(output1, theta-pi/4, length*0.65)
output3 <- tree(output1, pi/4+theta, length*0.65)
}
else{
return(NULL)
}
}
tree(c(4,4), 1, 10)
tree(c(4,4), 1, 20)
tree(c(4,4), 1, 30)
tree(c(4,4), 1, 40)
tree(c(4,4), 1, 50)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
tree(c(4,4), 1, 50)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
tree(c(4,4), 1, 30)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
tree(c(4,4), 1.57, 30)
source('~/CMEECoursework/Week9/Sandbox/fractalsinr.R')
tree(c(4,4), 1.57, 30)
