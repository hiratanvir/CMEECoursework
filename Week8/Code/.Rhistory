for(i in unique(aic_df$ID)){
aic_df$wi_cubic <- exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$wi_sf <- exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$weighted_sum <- aic_df[6]+aic_df[7]
}
write.csv(aic_df,"../Results/AIC_results.csv", row.names = FALSE)
write.csv(aic_df,"../Results/AIC_results.csv")
View(aic_df)
write.table(aic_df, "..Results/AIC_results.csv", sep = ",", col.names = T, append = T)
write.table(aic_df, "../Results/AIC_results.csv", sep = ",", col.names = T, append = T)
write.table(aic_df, "../Results/AIC_results.csv", sep = ",", col.names = T)
write.table(aic_df, "../Results/AIC_results.csv", row.names=FALSE, sep = ",", col.names = T)
write.csv(aic_df, "../Results/AIC_results.csv")
View(aic_df)
View(aic_df)
write.csv(aic_df, "../Results/AIC_results.csv", na="")
#!/usr/bin/env Rscript
rm(list=ls())
graphics.off()
require(ggplot2)
library(dplyr)
#load in TPC data set to get the x and y co-ordinates per group
df <- read.csv("../Results/FINAL_dF.csv")
DF = df %>% group_by(uniqueID) %>% arrange(uniqueID) #orders the ID in ascending order
#load in the nlls results for the cubic model and plot the results using ggplot2
cubic_df <- read.csv("../Results/cubic_report.csv") #dataframe is already ordered by ID
#load in the nlls results for the full schoolfield model and plot the results on the same ggplot2 graph
schoolfield_df <- read.csv("../Results/schoolfield_report.csv")
#make new dataframe containing ID column and AIC for cubic and schoolfield
subset_cubic <- cubic_df[,c("ID","AIC")]
subset_sf <- schoolfield_df[,c("ID","AIC")]
#merge the two subsetted dataframes by id
aic_df <- merge(x = subset_cubic, y = subset_sf, by = "ID", all = TRUE)
colnames(aic_df) <- c("ID","AIC_cubic","AIC_schoolfield")
for(i in unique(aic_df$ID)){
aic_min = apply((aic_df[2:3]), 1, FUN=min)
aic_df$AIC_diff_cubic <- aic_df$AIC_cubic - aic_min
aic_df$AIC_diff_sf <- aic_df$AIC_schoolfield - aic_min
}
for(i in unique(aic_df$ID)){
aic_df$wi_cubic <- exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$wi_sf <- exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$weighted_sum <- aic_df[6]+aic_df[7]
}
View(aic_df)
write.csv(aic_df, "../Results/AIC_results.csv", na="")
?write.csv
aic_df
aic_df.colnames
aic_df.cols()
aic_df.colnames()
aic_df.describe()
aic_df.describe
summary(aic_df)
describe(aic_df)
#!/usr/bin/env Rscript
rm(list=ls())
df <- read.csv("../Results/AIC_results.csv")
source('~/CMEECoursework/Week8/Code/nlls_plots.r')
df = data.frame('a' = c(1,2,3,4))
df = data.frame('a' = c(1,2,3,4), 'b' = c(2,3,1,NA), 'c' = c(1, NA, NA, NA)
df = data.frame('a' = c(1,2,3,4), 'b' = c(2,3,1,NA), 'c' = c(1, NA, NA, NA))
df = data.frame('a' = c(1,2,3,4), 'b' = c(2,3,1,NA), 'c' = c(1, NA, NA, NA))
df
write.csv(df, "test.csv")
subset_cubic <- cubic_df[,c("ID","AIC")]
subset_sf <- schoolfield_df[,c("ID","AIC")]
#merge the two subsetted dataframes by id
aic_df <- merge(x = subset_cubic, y = subset_sf, by = "ID", all = TRUE)
colnames(aic_df) <- c("ID","AIC_cubic","AIC_schoolfield")
for(i in unique(aic_df$ID)){
aic_min = apply((aic_df[2:3]), 1, FUN=min)
aic_df$AIC_diff_cubic <- aic_df$AIC_cubic - aic_min
aic_df$AIC_diff_sf <- aic_df$AIC_schoolfield - aic_min
}
#compare how many cubic and schoolfield had minimum aic value
#work out the weighted aic for each model using the formula
# wi = exp(-1/2*Δi)/sum(exp(-1/2*Δ))
for(i in unique(aic_df$ID)){
aic_df$wi_cubic <- exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$wi_sf <- exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$weighted_sum <- aic_df[6]+aic_df[7]
}
View(aic_df)
write.csv(aic_df, "../Results/AIC_results.csv", na="")
aic_df$ID
aic_df$AIC_schoolfield
write.csv(aic_df, "../Results/AIC_results.csv", sep=",")
write.table(aic_df, "../Results/AIC_results.csv", sep=",")
write.table(as.matrix(aic_df), "../Results/AIC_results.csv", sep=",")
as.matrix(aic_df)
aic_df
#make new dataframe containing ID column and AIC for cubic and schoolfield
subset_cubic <- cubic_df[,c("ID","AIC")]
subset_sf <- schoolfield_df[,c("ID","AIC")]
#merge the two subsetted dataframes by id
aic_df <- merge(x = subset_cubic, y = subset_sf, by = "ID", all = TRUE)
colnames(aic_df) <- c("ID","AIC_cubic","AIC_schoolfield")
for(i in unique(aic_df$ID)){
aic_min = apply((aic_df[2:3]), 1, FUN=min)
aic_df$AIC_diff_cubic <- aic_df$AIC_cubic - aic_min
aic_df$AIC_diff_sf <- aic_df$AIC_schoolfield - aic_min
}
aic_df$wi_cubic <- exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$wi_sf <- exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$weighted_sum <- aic_df[6]+aic_df[7]
rm(aic_df)
#make new dataframe containing ID column and AIC for cubic and schoolfield
subset_cubic <- cubic_df[,c("ID","AIC")]
subset_sf <- schoolfield_df[,c("ID","AIC")]
#merge the two subsetted dataframes by id
aic_df <- merge(x = subset_cubic, y = subset_sf, by = "ID", all = TRUE)
colnames(aic_df) <- c("ID","AIC_cubic","AIC_schoolfield")
for(i in unique(aic_df$ID)){
aic_min = apply((aic_df[2:3]), 1, FUN=min)
aic_df$AIC_diff_cubic <- aic_df$AIC_cubic - aic_min
aic_df$AIC_diff_sf <- aic_df$AIC_schoolfield - aic_min
}
aic_df$wi_cubic <- exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$wi_sf <- exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$weighted_sum <- aic_df[6]+aic_df[7]
View(aic_df)
View(aic_df)
#make new dataframe containing ID column and AIC for cubic and schoolfield
subset_cubic <- cubic_df[,c("ID","AIC")]
subset_sf <- schoolfield_df[,c("ID","AIC")]
#merge the two subsetted dataframes by id
aic_df <- merge(x = subset_cubic, y = subset_sf, by = "ID", all = TRUE)
colnames(aic_df) <- c("ID","AIC_cubic","AIC_schoolfield")
aic_min = apply((aic_df[2:3]), 1, FUN=min)
aic_df$AIC_diff_cubic <- aic_df$AIC_cubic - aic_min
aic_df$AIC_diff_sf <- aic_df$AIC_schoolfield - aic_min
write.csv(aic_df, "../Results/AIC_results.csv")
aic_df$wi_cubic <- exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$wi_sf <- exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
aic_df$weighted_sum <- aic_df[6]+aic_df[7]
write.csv(aic_df, "../Results/AIC_results.csv")
#make new dataframe containing ID column and AIC for cubic and schoolfield
subset_cubic <- cubic_df[,c("ID","AIC")]
subset_sf <- schoolfield_df[,c("ID","AIC")]
#merge the two subsetted dataframes by id
aic_df <- merge(x = subset_cubic, y = subset_sf, by = "ID", all = TRUE)
colnames(aic_df) <- c("ID","AIC_cubic","AIC_schoolfield")
aic_min = apply((aic_df[2:3]), 1, FUN=min)
aic_df$AIC_diff_cubic <- aic_df$AIC_cubic - aic_min
aic_df$AIC_diff_sf <- aic_df$AIC_schoolfield - aic_min
exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))
length(exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5])))))
nrow(exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5])))))
as.numeric(exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5])))))
unlist(exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5])))))
as.numeric(unlist(exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
aic_df$wi_cubic <- as.numeric(unlist(exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
aic_df$wi_sf <- as.numeric(unlist(exp(-1exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
write.csv(aic_df, "../Results/AIC_results.csv")
aic_df$wi_cubic <- as.numeric(unlist(exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
aic_df$wi_sf <- as.numeric(unlist(exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
aic_df$weighted_sum <- as.numeric(unlist(aic_df[6]+aic_df[7]))
#make new dataframe containing ID column and AIC for cubic and schoolfield
subset_cubic <- cubic_df[,c("ID","AIC")]
subset_sf <- schoolfield_df[,c("ID","AIC")]
#merge the two subsetted dataframes by id
aic_df <- merge(x = subset_cubic, y = subset_sf, by = "ID", all = TRUE)
colnames(aic_df) <- c("ID","AIC_cubic","AIC_schoolfield")
aic_min = apply((aic_df[2:3]), 1, FUN=min)
aic_df$AIC_diff_cubic <- aic_df$AIC_cubic - aic_min
aic_df$AIC_diff_sf <- aic_df$AIC_schoolfield - aic_min
aic_df$wi_cubic <- as.numeric(unlist(exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
aic_df$wi_sf <- as.numeric(unlist(exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
aic_df$weighted_sum <- as.numeric(unlist(aic_df[6]+aic_df[7]))
write.csv(aic_df, "../Results/AIC_results.csv")
View(aic_df)
#!/usr/bin/env Rscript
rm(list=ls())
graphics.off()
require(ggplot2)
library(dplyr)
#load in TPC data set to get the x and y co-ordinates per group
df <- read.csv("../Results/FINAL_dF.csv")
DF = df %>% group_by(uniqueID) %>% arrange(uniqueID) #orders the ID in ascending order
#load in the nlls results for the cubic model and plot the results using ggplot2
cubic_df <- read.csv("../Results/cubic_report.csv") #dataframe is already ordered by ID
#load in the nlls results for the full schoolfield model and plot the results on the same ggplot2 graph
schoolfield_df <- read.csv("../Results/schoolfield_report.csv")
#make new dataframe containing ID column and AIC for cubic and schoolfield
subset_cubic <- cubic_df[,c("ID","AIC")]
subset_sf <- schoolfield_df[,c("ID","AIC")]
#merge the two subsetted dataframes by id
aic_df <- merge(x = subset_cubic, y = subset_sf, by = "ID", all = TRUE)
colnames(aic_df) <- c("ID","AIC_cubic","AIC_schoolfield")
aic_min = apply((aic_df[2:3]), 1, FUN=min)
aic_df$AIC_diff_cubic <- aic_df$AIC_cubic - aic_min
aic_df$AIC_diff_sf <- aic_df$AIC_schoolfield - aic_min
aic_df$wi_cubic <- as.numeric(unlist(exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
aic_df$wi_sf <- as.numeric(unlist(exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
aic_df$weighted_sum <- as.numeric(unlist(aic_df[6]+aic_df[7]))
View(aic_df)
source('~/CMEECoursework/Week8/Code/nlls_plots.r')
#make a barplot showing the aic weightings of the cubic model vs the schoolfield model
barplot(aic_df$wi_cubic, aic_df$wi_sf)
?barplot
#make a barplot showing the aic weightings of the cubic model vs the schoolfield model
barplot(aic_df$wi_cubic)
barplot(aic_df$wi_sf)
ggplot(aic_df, aes(x=AIC_diff_cubic, y=frequency, fill=variable)) + geom_bar())
ggplot(aic_df, aes(x=AIC_diff_cubic, y=frequency, fill=variable)) + geom_bar()
hist(aic_df$AIC_diff_cubic)
hist(aic_df$AIC_diff_cubic, col = 'red')
hist(aic_df$AIC_diff_sf, col = 'blue')
hist(aic_df$AIC_diff_cubic, col = 'red')
hist(aic_df$AIC_diff_sf, col = 'blue', add=T)
hist(aic_df$AIC_diff_cubic, col = 'red', breaks = 100)
hist(aic_df$AIC_diff_sf, col = 'blue', breaks = 100, add=T)
mean(aic_df$AIC_diff_cubic)
mean(aic_df$AIC_diff_cubic, na.rm=T)
mode(aic_df$AIC_diff_cubic, na.rm=T)
library(moodest)
library(modeest)
mlv(aic_df$AIC_diff_cubic)
mlv(aic_df$AIC_diff_cubic, na.rm = T)
sd(aic_df$AIC_diff_cubic, na.rm=T)
#plot the distribution of the data
z_score_cubic <- (aic_df$AIC_diff_cubic - mean(aic_df$AIC_diff_cubic, na.rm = T)/sd(aic_df$AIC_diff_cubic, na.rm=T))
z_score_cubic
summary(z_score_cubic)
plot(z_score_cubic)
plot(z_score_cubic, type="line")
ggp <- ggplot(data.frame(aic_df),aes(x=wi_cubic))
# counts
ggp + geom_histogram(fill="lightgreen")
# proportion
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
summary(z_score_cubic)
summary(aic_df$wi_cubic)
plot(aic_df$wi_cubic)
barplot(aic_df$wi_cubic)
ggp <- ggplot(data.frame(aic_df),aes(x=wi_cubic))
# counts
ggp + geom_histogram(fill="lightgreen")
View(schoolfield_df)
#make new dataframe containing ID column and AIC for cubic and schoolfield
subset_cubic <- cubic_df[,c("ID","AIC","r.squared")]
subset_sf <- schoolfield_df[,c("ID","AIC","r.squared")]
#merge the two subsetted dataframes by id
aic_df <- merge(x = subset_cubic, y = subset_sf, by = "ID", all = TRUE)
View(cubic_df)
#make new dataframe containing ID column and AIC for cubic and schoolfield
subset_cubic <- cubic_df[,c("ID","AIC")]
subset_sf <- schoolfield_df[,c("ID","AIC")]
#merge the two subsetted dataframes by id
aic_df <- merge(x = subset_cubic, y = subset_sf, by = "ID", all = TRUE)
colnames(aic_df) <- c("ID","AIC_cubic","AIC_schoolfield")
aic_min = apply((aic_df[2:3]), 1, FUN=min)
aic_df$AIC_diff_cubic <- aic_df$AIC_cubic - aic_min
aic_df$AIC_diff_sf <- aic_df$AIC_schoolfield - aic_min
aic_df$wi_cubic <- as.numeric(unlist(exp(-1/2*aic_df[4])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
aic_df$wi_sf <- as.numeric(unlist(exp(-1/2*aic_df[5])/((exp(-1/2*(aic_df[4])))+(exp(-1/2*(aic_df[5]))))))
aic_df$weighted_sum <- as.numeric(unlist(aic_df[6]+aic_df[7]))
# counts
ggp + geom_histogram(fill="lightgreen") + scale_y_continuous(breaks=100)
# counts
ggp + geom_histogram(fill="lightgreen") + scale_y_continuous(breaks=1000)
# counts
ggp + geom_histogram(fill="lightgreen") + scale_y_continuous(breaks=10000)
# counts
ggp + geom_histogram(fill="lightgreen") + scale_x_continuous(breaks=10000)
ggp <- ggplot(data.frame(aic_df),aes(x=wi_cubic))
# counts
ggp + geom_histogram(fill="lightgreen")
hist(aic_df$wi_cubic, col = 'blue', breaks = 100)
hist(aic_df$wi_cubic, col = 'red', breaks = 100)
hist(aic_df$wi_sf, col = 'blue', breaks = 100, add=T)
boxplot(aic_df$wi_cubic)
#report table
par(mfrow = c(1, 2))
boxplot(aic_df$wi_cubic)
boxplot(aic_df$wi_sf)
ggplot(melt(aic_df), aes(variable, value)) + geom_boxplot()
library(reshape2)
ggplot(melt(aic_df), aes(variable, value)) + geom_boxplot()
ggplot(melt(aic_df), aes((wi_cubic, wi_sf), value)) + geom_boxplot()
ggplot(melt(aic_df), aes((wi_cubic+wi_sf), value)) + geom_boxplot()
ggplot(melt(aic_df), aes((wi_cubic), value)) + geom_boxplot()
ggplot(melt(aic_df), aes((aic_df$wi_cubic), value)) + geom_boxplot()
ggplot(melt(aic_df), aes((aic_df$wi_cubic), value)) + geom_boxplot()
dat.m <- melt(aic_df,id.vars='ID', measure.vars=c('wi_cubic','wi_sf'))
p <- ggplot(dat.m) +
geom_boxplot(aes(x=ID, y=value, color=variable))
p
table(aic_df$ID)
table(aic_df$wi_cubic)
dat.m <- aic_df[,c("wi_cubic","wi_sf")]
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
ggplot(dat.m, aes(x=wi_cubic)) + geom_density(alpha=.3)
#plot the distribution of the model weights
library(reshape2)
dat.m <- aic_df[,c("wi_cubic","wi_sf")]
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
table(unlist(aic_df))
table(unlist(aic_df$wi_cubic))
table(unlist(aic_df$AIC_diff_cubic))
table(aic_df$AIC_diff_cubic)
ggplot(dat.m, aes(x=wi_cubic)) + geom_density(alpha=.3)
aggregate(data.frame(count = aic_df$AIC_diff_cubic), list(value = 0), length)
aggregate(data.frame(count = aic_df$AIC_diff_cubic), list(value = AIC_diff_cubic), length)
aggregate(data.frame(count = aic_df$AIC_diff_cubic), list(value = aic_df$AIC_diff_cubic), length)
#counts the number of occurrences of particular values in the aic cubic differences
cubic_count <- aggregate(data.frame(count = aic_df$AIC_diff_cubic), list(value = aic_df$AIC_diff_cubic), length)
View(cubic_count)
schoolfield_count <- aggregate(data.frame(count = aic_df$AIC_diff_sf), list(value = aic_df$AIC_diff_sf), length)
View(schoolfield_count)
plot(cubic_count, schoolfield_count)
plot(cubic_count, schoolfield_count, type="line")
hist(cubic_count)
hist(cubic_count$count)
ggplot(data = dat.m) + geom_bar(aes(x = dat.m$wi_cubic, y = count), stat = "identity")
ggplot(data = dat.m) + geom_bar(aes(x = (dat.m$wi_cubic, na.rm=T), y = count), stat = "identity")
ggplot(data = dat.m) + geom_bar(aes(x = (dat.m$wi_cubic, na.rm=T), y = count), stat = "identity"))
ggplot(data = dat.m) + geom_bar(aes(x = (dat.m$wi_cubic, na.rm=T), y = count), stat = "identity"
ggplot(data = dat.m) + geom_bar(aes(x = (dat.m$wi_cubic, na.rm=T), y = count), stat = "identity"))
ggplot(data = dat.m) + geom_bar(aes(x = (dat.m$wi_cubic, na.rm=T), y = count))
ggplot(data = dat.m) + geom_bar(aes(x =(dat.m$wi_cubic), y = count))
pp <- ggplot(data=dat.m, aes(x=wi_cubic)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
pp
library(scales)
pp + scale_y_continuous(labels = percent)
pp <- ggplot(data=dat.m, aes(x=wi_cubic)) +
geom_bar(aes(y =count))
pp
pp <- ggplot(data=dat.m, aes(x=aic_df$wi_cubic)) +
geom_bar(aes(y =count))
pp
pp <- ggplot(data=dat.m, aes(x=dat.m$wi_cubic)) +
geom_bar(aes(y =count))
pp
data <- aic_df[complete.cases(aic_df), ]
View(data)
pp <- ggplot(data=data, aes(x=data$wi_cubic)) +
geom_bar(aes(y =count))
pp
pp <- ggplot(data=data, aes(x=data$wi_cubic)) +
geom_bar(aes(y =data$wi_cubic))
pp
pp <- ggplot(data=data, aes(x=data$wi_cubic)) +
geom_bar(aes(y =data$wi_cubic), stats_count())
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_bar(aes(fill=variable))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_bar(stat = "identity")
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_bar(stat = "identity")+scale_y_continuous(labels = percent_format())
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_bar(stat = "identity")+scale_y_continuous(labels = probability_format())
ggplot(dat.m, aes(x = variable, y = value)) +
geom_bar(aes(y=..density..), position = "dodge", width = 1) +
scale_y_continuous(limits=c(0,1))
ggplot(dat.m, aes(x =dat.m$wi_cubic, y=value)) +
geom_bar(aes(y=..density..), position = "dodge", width = 1) +
scale_y_continuous(limits=c(0,1))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_bar(stat = "identity")+scale_y_continuous(limits = c(0,1))
View(aic_df)
View(dat.m)
View(aic_df)
plot(aic_df$wi_cubic, aic_df$wi_sf, type="line")
plot(aic_df$ID, aic_df$wi_cubic, type="line")
plot(aic_df$ID, aic_df$wi_cubic, type="line")
plot(aic_df$ID, aic_df$wi_cubic, type="point")
ggplot(dat.m, aes(x, fill=group, colour=group)) +
geom_histogram(breaks=seq(0,200,5), alpha=0.6,
position="identity", lwd=0.2) +
ggtitle("Unormalized")
ggplot(dat.m, aes(x=variables, fill=group, colour=group)) +
geom_histogram(breaks=seq(0,200,5), alpha=0.6,
position="identity", lwd=0.2) +
ggtitle("Unormalized")
dat1 = data.frame(x=rnorm(1000, 100, 10), group="A")
dat1
dat1 = data.frame(x=aic_df$wi_cubic, group="cubic_weights")
dat1
dat2 = data.frame(x=aic_df$wi_sf, group="schoolfield_weights")
dat = rbind(dat1, dat2)
dat
ggplot(dat.m, aes(x=x, fill=group, colour=group)) +
geom_histogram(breaks=seq(0,200,5), alpha=0.6,
position="identity", lwd=0.2) +
ggtitle("Unormalized")
ggplot(dat, aes(x=x, fill=group, colour=group)) +
geom_histogram(breaks=seq(0,200,5), alpha=0.6,
position="identity", lwd=0.2) +
ggtitle("Unormalized")
View(dat)
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_histogram(aes(y=..density..), breaks=seq(0,200,5), alpha=0.6,
position="identity", lwd=0.2) +
ggtitle("Normalized")
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5)
library(scales) # For percent_format()
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_histogram(aes(y=2*(..density..)/sum(..density..)), breaks=seq(0,200,5), alpha=0.6,
position="identity", lwd=0.2) +
scale_y_continuous(labels=percent_format())
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5)
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5) + scale_y_continuous(labels=percent_format())
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5) + scale_y_continuous(limits = c(0,1))
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5) + scale_y_continuous(labels=percent_format())
ggplot(dat,aes(x,prop,fill=group))+
geom_bar(stat="identity",position='dodge')
ggplot(dat,aes(x,fill=group))+
geom_bar(stat="identity",position='dodge')
ggplot(all,aes(x=x,fill=group))+
geom_histogram(aes(y=0.5*..density..),
alpha=0.5,position='identity',binwidth=0.5)
ggplot(all,aes(x=x,fill=group))+
geom_histogram(aes(y=0.5*..density..),
alpha=0.5,position='identity',binwidth=0.5, na.rm=T)
ggplot(all,aes(x=x,fill=group, na.rm=T))+
geom_histogram(aes(y=0.5*..density..),
alpha=0.5,position='identity',binwidth=0.5)
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_bar(stat = "identity")+scale_y_continuous(limits = c(0,1))
dat.m <- aic_df[,c("wi_cubic","wi_sf")]
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5) + scale_y_continuous(labels=percent_format())
plot(aic_df$ID, aic_df$wi_cubic, type="line")
plot(aic_df$wi_cubic, type="line")
View(aic_df)
#plot shows the distribution of the aic weights of each model
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5) + scale_y_continuous(labels=percent_format()) + xlab("AIC weights distribution")
#plot shows the distribution of the aic weights of each model
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5) + scale_y_continuous(labels=percent_format()) + xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets")
#plot shows the distribution of the aic weights of each model
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5) + scale_y_continuous(labels=percent_format()) + xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models")
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield"))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings")
hist(aic_df$AIC_diff_cubic)
hist(aic_df$AIC_diff_cubic, breaks = 100)
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings")
View(data)
View(df)
dat1 = data.frame(x=aic_df$wi_cubic, group="cubic_weights")
dat2 = data.frame(x=aic_df$wi_sf, group="schoolfield_weights")
dat = rbind(dat1, dat2)
#plot shows the distribution of the aic weights of each model
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5) + scale_y_continuous(labels=percent_format()) + xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings") + geom_jitter(position=position_jitter(width=.1, height=0))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings") + geom_jitter(position=position_jitter(width=.01, height=0))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings") + geom_jitter(position=position_jitter(width=0.1, height=0))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings") + geom_jitter(position=position_jitter(width=0.2, height=0))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings") + geom_jitter(position=position_jitter(width=0.3, height=0))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings")
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings") geom_jitter(position=position_jitter(width=.1, height=0))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings") geom_jitter(position=position_jitter(width=.1, height=0))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings") +geom_jitter(position=position_jitter(width=.1, height=0))
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple datasets") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings")
ggplot(data = melt(dat.m), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+ xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple traits") + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(name = "Models", labels=c("Cubic","Schoolfield")) + ylab("AIC weightings")
#plot shows the distribution of the aic weights of each model
ggplot(dat, aes(x, fill=group, colour=group)) +
geom_density(alpha=0.4, lwd=0.8, adjust=0.5) + scale_y_continuous(labels=percent_format()) + xlab("AIC weights distribution") +
ggtitle("Comparison of the AIC weights distribution between two models for multiple traits") + theme(plot.title = element_text(hjust = 0.5))
View(df)
View(aic_df)
View(DF)
View(df)
View(schoolfield_df)
r
R --version
R.version()
rm(list=ls())
graphics.off()
